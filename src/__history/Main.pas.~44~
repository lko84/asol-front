unit Main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, Vcl.ComCtrls, Vcl.StdCtrls,
  Vcl.ExtCtrls, Vcl.WinXCtrls,
  Spring.Container,
  FrameRegistry, Utils
  ;

type
  TMainForm = class(TForm)
    PageControlMain: TPageControl;
    Panel1: TPanel;
    CBFrames: TComboBox;
    Drawer: TPanel;
    constructor Create(AOwner: TComponent);
    procedure FormCreate(Sender: TObject);
    procedure OpenTab(const Title: string; FrameClass: TFrame);
    procedure ToggleDrawer;
    procedure DrawerClick(Sender: TObject);
    procedure CBFramesKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure CBFramesChange(Sender: TObject);
  private
    FrameRegistry: TFrameRegistry;
  public
    { Public declarations }
  end;

var
  MainForm: TMainForm;
  DrawerOpen: Boolean = True;

implementation

{$R *.dfm}

constructor TMainForm.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  FrameRegistry := TFrameRegistry.Instance;
end;

procedure TMainForm.FormCreate(Sender: TObject);
begin
  SetCueBanner(CBFrames, 'Open dialog...');
end;

procedure TMainForm.CBFramesChange(Sender: TObject);
var
  Matches: TArray<string>;
  Match: string;
begin
  if Length(CBFrames.Text)<= 2 then exit;
    CBFrames.Items.BeginUpdate;
  try
    CBFrames.Items.Clear;

    if Length(CBFrames.Text) >= 2 then
    begin
      Matches := FrameRegistry.Search(CBFrames.Text);
      for Match in Matches do
        CBFrames.Items.Add(Match);

      CBFrames.DroppedDown := Length(Matches) > 0;
    end
    else
      CBFrames.DroppedDown := False;
  finally
    CBFrames.Items.EndUpdate;
  end;
end;

procedure TMainForm.CBFramesKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if Key = VK_RETURN then
  begin
    if CBFrames.Items.Count > 0 then
    begin
      // TFrameRegistry.OpenByName(ComboSearch.Items[0]);
      CBFrames.Text := '';
      CBFrames.DroppedDown := False;
    end;
  end;
end;

procedure TMainForm.DrawerClick(Sender: TObject);
begin
  ToggleDrawer;
end;

procedure TMainForm.OpenTab(const Title: string; FrameClass: TFrame);
var
  Tab: TTabSheet;
  Frame: TFrame;
begin
  for var i := 0 to PageControlMain.PageCount - 1 do
    if PageControlMain.Pages[i].Caption = Title then
    begin
      PageControlMain.ActivePage := PageControlMain.Pages[i];
      Exit;
    end;

  // Create new tab
  Tab := TTabSheet.Create(PageControlMain);
  Tab.PageControl := PageControlMain;
  Tab.Caption := Title;

  // Create frame
  Frame := FrameClass.Create(Tab);
  Frame.Parent := Tab;
  Frame.Align := alClient;

  //PageControlMain.ActivePage := Tab;
end;


procedure TMainForm.ToggleDrawer;
begin
  if DrawerOpen then
  begin
    Panel1.Width := 0;
  end
  else
  begin
    Panel1.Width := 200;
  end;
  DrawerOpen := not DrawerOpen;
end;

end.
